[
  {
    "file_name": "Constants.js",
    "chunk_index": 0,
    "method": "file_header",
    "chunk_text": "/**\n * Constants.js - Game Entity Default Configurations\n * \n * @module Constants\n * @description Defines default configurations for game entities including:\n * - Enemies (movement, health, damage)\n * - Traps (damage, duration, cooldown)\n * - Projectiles (speed, damage)\n * \n * Usage:\n * - Values serve as fallbacks when specific configurations are not provided\n * - Override these defaults by passing custom configs to entity constructors\n * - Import specific constants using: import { DEFAULT_ENEMY_CONFIG } from './Constants'\n */",
    "metadata": {
      "start_line": 1,
      "end_line": 5,
      "notes": "File header documentation explaining purpose of constants",
      "imports": []
    }
  },
  {
    "file_name": "Constants.js",
    "chunk_index": 1,
    "method": "DEFAULT_ENEMY_CONFIG",
    "chunk_text": "/**\n * DEFAULT ENEMY CONFIGURATION\n * Base settings for enemy entities if not overridden by specific enemy types\n *\n * @typedef {Object} EnemyConfig\n * @property {number} speed - Base movement speed in pixels/second\n * @property {number} health - Starting health points\n * @property {number} damage - Damage dealt to player on contact\n * @property {number} spawnRate - Milliseconds between spawns\n * @property {number} points - Score awarded when defeated\n */\nexport const DEFAULT_ENEMY_CONFIG = {\n    speed: 100,      // Base movement speed in pixels/second\n    health: 100,     // Starting health points\n    damage: 10,      // Damage dealt to player on contact\n    spawnRate: 1000, // Milliseconds between spawns\n    points: 100      // Score awarded when defeated\n};",
    "metadata": {
      "start_line": 7,
      "end_line": 16,
      "notes": "Default configuration object for enemy entities with base settings",
      "imports": []
    }
  },
  {
    "file_name": "Constants.js",
    "chunk_index": 2,
    "method": "DEFAULT_TRAP_CONFIG",
    "chunk_text": "/**\n * DEFAULT TRAP CONFIGURATION\n * Base settings for trap objects in the game environment\n *\n * @typedef {Object} TrapConfig\n * @property {number} damage - Damage dealt to entities (hit points)\n * @property {number} duration - How long the trap remains active (ms)\n * @property {number} cooldown - Time before the trap can be triggered again (ms)\n * @property {number} cost - Energy points required to place the trap\n * \n * Note: Traps are temporary hazards that can damage both players and enemies.\n * Cost is deducted from the player's energy pool when placed.\n */\nexport const DEFAULT_TRAP_CONFIG = {\n    damage: 20,      // Damage dealt to entities (hit points)\n    duration: 5000,  // How long trap remains active (ms)\n    cooldown: 3000,  // Time before trap can be triggered again (ms)\n    cost: 50         // Energy points required to place trap\n};",
    "metadata": {
      "start_line": 18,
      "end_line": 26,
      "notes": "Default configuration object for trap entities with base settings",
      "imports": []
    }
  }
]
