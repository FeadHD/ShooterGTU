[
    {
      "file_name": "BoundaryManager.js",
      "chunk_index": 0,
      "method": "class_definition",
      "chunk_text": "/**\n * BoundaryManager.js\n * Creates and manages invisible boundaries for the game scene\n * Prevents player from moving outside playable area\n */\n\nexport class SceneBoundaryManager {",
      "metadata": {
        "start_line": 1,
        "end_line": 5,
        "notes": "Defines core boundary management system for game scene containment. Implements static physics boundaries to constrain player movement within game area. Utilizes Phaser's physics and scene systems for boundary implementation.",
        "imports": [
          "Phaser.Scene",
          "Phaser.GameObjects.Rectangle",
          "Phaser.Physics.Arcade",
          "Phaser.Scale.ScaleManager"
        ],
        "tags": [
          "class_definition",
          "boundary_manager",
          "phaser3",
          "physics",
          "scene_management",
          "core_system",
          "game_boundaries",
          "player_containment"
        ],
        "related_chunks": [
          {"file_name": "BoundaryManager.js", "chunk_index": 1, "method": "constructor"},
          {"file_name": "BoundaryManager.js", "chunk_index": 2, "method": "createBoundaries"}
        ]
      }
    },
    {
      "file_name": "BoundaryManager.js",
      "chunk_index": 1,
      "method": "constructor",
      "chunk_text": "    /**\n     * Initialize boundary manager\n     * @param {Phaser.Scene} scene - The scene to add boundaries to\n     */\n    constructor(scene) {\n        this.scene = scene;\n    }",
      "metadata": {
        "start_line": 7,
        "end_line": 11,
        "notes": "Initializes boundary management system with scene context. Injects scene dependency for accessing physics system, game scale, and object creation. Establishes foundation for boundary creation and physics setup.",
        "imports": ["Phaser.Scene"],
        "tags": [
          "constructor",
          "boundary_manager",
          "phaser3",
          "initialization",
          "scene_setup",
          "dependency_injection",
          "core_initialization",
          "scene_integration"
        ],
        "related_chunks": [
          {"file_name": "BoundaryManager.js", "chunk_index": 0, "method": "class_definition"},
          {"file_name": "BoundaryManager.js", "chunk_index": 2, "method": "createBoundaries"}
        ]
      }
    },
    {
      "file_name": "BoundaryManager.js",
      "chunk_index": 2,
      "method": "createBoundaries",
      "chunk_text": "    /**\n     * Create invisible collision boundaries\n     * Currently implements left boundary, can be extended for right/top/bottom\n     * @param {Phaser.GameObjects.Sprite} player - Player sprite to collide with boundaries\n     */\n    createBoundaries(player) {\n        const { width, height } = this.scene.scale;\n\n        const leftBoundary = this.scene.add.rectangle(0, height / 2, 10, height, 0x000000, 0);\n        this.scene.physics.add.existing(leftBoundary, true);\n\n        if (player) {\n            this.scene.physics.add.collider(player, leftBoundary);\n        }\n    }",
      "metadata": {
        "start_line": 13,
        "end_line": 32,
        "notes": "Implements game boundary creation using invisible physics rectangles. Creates 10px wide static boundary at x=0 spanning full scene height. Configures physics body as static and establishes player collision detection. Uses scene scale for dynamic boundary sizing.",
        "imports": [
          "Phaser.GameObjects.Sprite",
          "Phaser.GameObjects.Rectangle",
          "Phaser.Physics.Arcade.Body",
          "Phaser.Physics.Arcade.Collider",
          "Phaser.Scale.ScaleManager"
        ],
        "tags": [
          "create_boundaries",
          "collision",
          "phaser3",
          "physics",
          "player_bounds",
          "static_body",
          "scene_setup",
          "boundary_initialization",
          "collision_detection",
          "game_area_constraint"
        ],
        "related_chunks": [
          {"file_name": "BoundaryManager.js", "chunk_index": 0, "method": "class_definition"},
          {"file_name": "BoundaryManager.js", "chunk_index": 1, "method": "constructor"}
        ]
      }
    }
]