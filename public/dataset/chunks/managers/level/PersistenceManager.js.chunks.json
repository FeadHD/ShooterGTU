[
    {
      "file_name": "PersistenceManager.js",
      "chunk_index": 0,
      "method": "class_definition",
      "chunk_text": "/**\n * Manages game state persistence using browser's localStorage\n * Handles saving, loading, and clearing game state data\n */\nexport class PersistenceManager {",
      "metadata": {
        "start_line": 1,
        "end_line": 5,
        "notes": "Class definition for managing game state persistence using browser's localStorage",
        "imports": [],
        "tags": ["class_definition", "persistence_manager", "local_storage"],
        "related_chunks": []
      }
    },
    {
      "file_name": "PersistenceManager.js",
      "chunk_index": 1,
      "method": "constructor",
      "chunk_text": "    /**\n     * Creates a new PersistenceManager instance\n     * @param {GameStateManager} gameStateManager - Reference to the game's state manager\n     */\n    constructor(gameStateManager) {\n        this.gameStateManager = gameStateManager;\n    }",
      "metadata": {
        "start_line": 7,
        "end_line": 11,
        "notes": "Initializes the PersistenceManager with a reference to the game's state manager",
        "imports": [],
        "tags": ["constructor", "persistence_manager", "game_state_manager"],
        "related_chunks": []
      }
    },
    {
      "file_name": "PersistenceManager.js",
      "chunk_index": 2,
      "method": "saveToLocalStorage",
      "chunk_text": "    /**\n     * Saves current game state to localStorage\n     * Converts all registry values to a JSON string\n     */\n    saveToLocalStorage() {\n        const gameState = {};\n        const registry = this.gameStateManager.registry;\n        \n        // Extract all key-value pairs from the registry\n        registry.getAll().forEach(({ key, value }) => {\n            gameState[key] = value;\n        });\n\n        // Store the state as a JSON string in localStorage\n        localStorage.setItem('gameState', JSON.stringify(gameState));\n    }",
      "metadata": {
        "start_line": 13,
        "end_line": 28,
        "notes": "Saves the current game state to localStorage by converting registry values to JSON",
        "imports": [],
        "tags": ["save_to_local_storage", "game_state", "local_storage", "json"],
        "related_chunks": [
          {"file_name": "PersistenceManager.js", "chunk_index": 1, "method": "constructor"},
          {"file_name": "GameStateManager.js", "chunk_index": 4, "method": "set"}
        ]
      }
    },
    {
      "file_name": "PersistenceManager.js",
      "chunk_index": 3,
      "method": "loadFromLocalStorage",
      "chunk_text": "    /**\n     * Loads saved game state from localStorage\n     * @returns {boolean} True if state was loaded successfully, false if no saved state exists\n     */\n    loadFromLocalStorage() {\n        const savedState = localStorage.getItem('gameState');\n        if (savedState) {\n            // Parse and restore each saved value to the game state\n            const gameState = JSON.parse(savedState);\n            Object.entries(gameState).forEach(([key, value]) => {\n                this.gameStateManager.set(key, value);\n            });\n            return true;\n        }\n        return false;\n    }",
      "metadata": {
        "start_line": 30,
        "end_line": 52,
        "notes": "Loads and restores saved game state from localStorage, returns success status",
        "imports": [],
        "tags": ["load_from_local_storage", "game_state", "local_storage", "json"],
        "related_chunks": [
          {"file_name": "PersistenceManager.js", "chunk_index": 1, "method": "constructor"},
          {"file_name": "GameStateManager.js", "chunk_index": 4, "method": "set"}
        ]
      }
    },
    {
      "file_name": "PersistenceManager.js",
      "chunk_index": 4,
      "method": "clearSavedState",
      "chunk_text": "    /**\n     * Clears any saved game state from localStorage\n     * Used when resetting the game or starting fresh\n     */\n    clearSavedState() {\n        localStorage.removeItem('gameState');\n    }",
      "metadata": {
        "start_line": 54,
        "end_line": 59,
        "notes": "Removes saved game state from localStorage, typically used for game resets",
        "imports": [],
        "tags": ["clear_saved_state", "local_storage", "game_state", "reset"],
        "related_chunks": []
      }
    }
]