[
  {
    "file_name": "config.js",
    "chunk_index": 0,
    "method": "imports",
    "chunk_text": "/**\n * @file config.js\n * @description Core Phaser game configuration and scene management\n */\n\n// Core game scenes\nimport { GameOver } from '../scenes/menus/GameOver';\nimport { WayneWorld } from '../scenes/levels/WayneWorld';\n\n// Menu scenes\nimport { MainMenu } from '../scenes/menus/MainMenu';\nimport { Leaderboard } from '../scenes/menus/Leaderboard';\nimport { MissionComplete } from '../scenes/menus/MissionComplete';\nimport { DevHub } from '../scenes/menus/DevHub/DevHub';\nimport { Credits } from '../scenes/menus/Credits';\n\n// Settings scenes\nimport Settings from '../scenes/menus/Settings';\nimport ControlsSettings from '../scenes/menus/ControlsSettings';\nimport SoundSettings from '../scenes/menus/SoundSettings';\nimport { SoundTester } from '../scenes/menus/DevHub/SoundTester';\n\n// Core engine scenes\nimport { Boot } from '../scenes/base/Boot';\nimport { Preloader } from '../scenes/base/Preloader';\nimport { PauseMenu } from '../scenes/menus/PauseMenu';",
    "metadata": {
      "start_line": 0,
      "end_line": 25,
      "notes": "Core imports and scene dependencies for Phaser game configuration",
      "imports": [
        "../scenes/menus/GameOver",
        "../scenes/levels/WayneWorld",
        "../scenes/menus/MainMenu",
        "../scenes/menus/Leaderboard",
        "../scenes/menus/MissionComplete",
        "../scenes/menus/DevHub/DevHub",
        "../scenes/menus/Credits",
        "../scenes/menus/Settings",
        "../scenes/menus/ControlsSettings",
        "../scenes/menus/SoundSettings",
        "../scenes/menus/DevHub/SoundTester",
        "../scenes/base/Boot",
        "../scenes/base/Preloader",
        "../scenes/menus/PauseMenu"
      ],
      "tags": [
        "configuration",
        "core_system",
        "imports",
        "scene_management"
      ],
      "related_chunks": [
        {"file_name": "config.js", "chunk_index": 1, "method": "class_definition"}
      ]
    }
  },
  {
    "file_name": "config.js",
    "chunk_index": 1,
    "method": "class_definition",
    "chunk_text": "/**\n * @class GameConfiguration\n * @classdesc Manages core Phaser game configuration and scene setup\n * \n * @description\n * Core functionality:\n * - Manages game engine settings\n * - Handles scene configuration\n * - Controls display settings\n * - Configures physics system\n * - Sets up input handling\n */\nexport class GameConfiguration {",
    "metadata": {
      "start_line": 27,
      "end_line": 39,
      "notes": "GameConfiguration class definition with core engine settings management",
      "imports": [],
      "tags": [
        "configuration",
        "core_system",
        "class_definition",
        "engine_settings"
      ],
      "related_chunks": [
        {"file_name": "config.js", "chunk_index": 0, "method": "imports"},
        {"file_name": "config.js", "chunk_index": 2, "method": "constructor"}
      ]
    }
  },
  {
    "file_name": "config.js",
    "chunk_index": 2,
    "method": "constructor",
    "chunk_text": "    /**\n     * @constructor\n     * @description\n     * Initializes game configuration with:\n     * - Display settings\n     * - Physics configuration\n     * - Scene management\n     * - Input handling\n     */\n    constructor() {\n        this.config = this._initializeConfig();\n        this.validateConfig();\n    }",
    "metadata": {
      "start_line": 41,
      "end_line": 53,
      "notes": "Constructor initialization with core game configuration setup",
      "imports": [],
      "tags": [
        "configuration",
        "initialization",
        "constructor",
        "engine_settings"
      ],
      "related_chunks": [
        {"file_name": "config.js", "chunk_index": 1, "method": "class_definition"},
        {"file_name": "config.js", "chunk_index": 3, "method": "_initializeConfig"}
      ]
    }
  },
  {
    "file_name": "config.js",
    "chunk_index": 3,
    "method": "_initializeConfig",
    "chunk_text": "    /**\n     * Initialize core game configuration\n     * \n     * @private\n     * @returns {Phaser.Types.Core.GameConfig} Core game configuration object\n     * \n     * @description\n     * Sets up:\n     * 1. Rendering system\n     * 2. Display settings\n     * 3. Physics engine\n     * 4. Input handling\n     * 5. Scene management\n     */\n    _initializeConfig() {\n        return {\n            // Rendering configuration\n            type: Phaser.AUTO,          // Let Phaser choose WebGL or Canvas\n            pixelArt: true,             // Optimize for pixel art graphics\n            \n            // Display settings\n            scale: {\n                mode: Phaser.Scale.NONE,\n                parent: 'game-container',    // DOM element to mount game\n                width: 1920,                 // Base game resolution\n                height: 1080,\n                autoRound: true,             // Round pixel values\n                zoom: 1,\n                autoCenter: Phaser.Scale.CENTER_BOTH,  // Center game in container\n                fullscreenTarget: 'game-container',\n                expandParent: true\n            },\n            \n            // DOM element support (for UI overlays)\n            dom: {\n                createContainer: true\n            },\n            \n            // Physics engine settings\n            physics: {\n                default: 'arcade',\n                arcade: {\n                    debug: false,           // Show physics bodies when true\n                    gravity: { y: 400 },    // Vertical gravity strength\n                    tileBias: 32            // Tile collision accuracy\n                }\n            },\n            \n            // Input handling\n            input: {\n                mouse: {\n                    preventDefaultWheel: true,\n                    preventDefaultDown: true\n                },\n                keyboard: true,\n                gamepad: true\n            },\n            \n            // Scene configuration\n            scene: [\n                Boot,\n                Preloader,\n                MainMenu,\n                WayneWorld,\n                GameOver,\n                Leaderboard,\n                MissionComplete,\n                DevHub,\n                Credits,\n                Settings,\n                ControlsSettings,\n                SoundSettings,\n                SoundTester,\n                PauseMenu\n            ]\n        };\n    }",
    "metadata": {
      "start_line": 55,
      "end_line": 120,
      "notes": "Private method to initialize core game engine configuration with display, physics, and scene settings",
      "imports": [
        "Phaser.AUTO",
        "Phaser.Scale",
        "Boot",
        "Preloader",
        "MainMenu",
        "WayneWorld",
        "GameOver",
        "Leaderboard",
        "MissionComplete",
        "DevHub",
        "Credits",
        "Settings",
        "ControlsSettings",
        "SoundSettings",
        "SoundTester",
        "PauseMenu"
      ],
      "tags": [
        "configuration",
        "initialization",
        "private_method",
        "engine_settings",
        "scene_management"
      ],
      "related_chunks": [
        {"file_name": "config.js", "chunk_index": 2, "method": "constructor"},
        {"file_name": "config.js", "chunk_index": 4, "method": "validateConfig"}
      ]
    }
  }
]
